apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ ansible_default_ipv4.address }}"
  bindPort: 6443
nodeRegistration:
  criSocket: unix://{{ containerd_socket }}
  kubeletExtraArgs:
    node-labels: "node-role.kubernetes.io/master="
    register-with-taints: "node-role.kubernetes.io/master=:NoSchedule"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v{{ kubernetes_version }}
clusterName: "{{ cluster_name }}"
controlPlaneEndpoint: "{{ control_plane_endpoint }}"
networking:
  podSubnet: "{{ pod_network_cidr }}"
  serviceSubnet: "{{ service_cidr }}"
  dnsDomain: "cluster.local"
apiServer:
  certSANs:
{% for san in api_server_cert_extra_sans %}
{% if san %}
    - "{{ san }}"
{% endif %}
{% endfor %}
  extraArgs:
    advertise-address: "{{ ansible_default_ipv4.address }}"
    bind-address: "0.0.0.0"
etcd:
  local:
    dataDir: "{{ etcd_data_dir }}"
    extraArgs:
      listen-metrics-urls: "http://127.0.0.1:2381"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: systemd
clusterDNS:
  - "{{ cluster_dns }}"
clusterDomain: "cluster.local"
failSwapOn: false
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: iptables
